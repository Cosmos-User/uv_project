{"timestamp": "2025-07-03 09:28:47", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 09:29:39", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 09:30:49", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 09:31:00", "logger": "uv_example", "level": "INFO", "message": "", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 44}
{"timestamp": "2025-07-03 09:31:00", "logger": "uv_example", "level": "INFO", "message": "POST http://testserver/ processed in  0.006997", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:31:00", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: ", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:31:25", "logger": "uv_example", "level": "INFO", "message": "", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 44}
{"timestamp": "2025-07-03 09:31:25", "logger": "uv_example", "level": "INFO", "message": "POST http://testserver/ processed in  0.006264", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:31:25", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: ", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:35:54", "logger": "uv_example", "level": "ERROR", "message": "Faile to connect to MongoDB : 74.225.239.248:27017: timed out (configured timeouts: socketTimeoutMS: 20000.0ms, connectTimeoutMS: 20000.0ms), Timeout: 30s, Topology Description: <TopologyDescription id: 68660184378074dc6f90e9f1, topology_type: Unknown, servers: [<ServerDescription ('74.225.239.248', 27017) server_type: Unknown, rtt: None, error=NetworkTimeout('74.225.239.248:27017: timed out (configured timeouts: socketTimeoutMS: 20000.0ms, connectTimeoutMS: 20000.0ms)')>]>", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 25}
{"timestamp": "2025-07-03 09:39:27", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 09:41:17", "logger": "uv_example", "level": "INFO", "message": "", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 44}
{"timestamp": "2025-07-03 09:41:17", "logger": "uv_example", "level": "INFO", "message": "GET http://localhost:8000/docs processed in  0.002775", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:41:17", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: ", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:41:17", "logger": "uv_example", "level": "INFO", "message": "", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 44}
{"timestamp": "2025-07-03 09:41:17", "logger": "uv_example", "level": "INFO", "message": "GET http://localhost:8000/openapi.json processed in  0.012905", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:41:17", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: ", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:41:38", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 09:45:04", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured While Processing pdf", "pathname": "D:\\1_Playground\\uv_example\\app\\api\\v1\\routers\\file_upload.py", "funcName": "upload_file", "lineno": 53}
{"timestamp": "2025-07-03 09:45:07", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  209.414414", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:45:07", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:45:08", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 09:45:20", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 09:50:40", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 09:51:15", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured While Processing pdf", "pathname": "D:\\1_Playground\\uv_example\\app\\api\\v1\\routers\\file_upload.py", "funcName": "upload_file", "lineno": 53}
{"timestamp": "2025-07-03 09:51:18", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  38.135140", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:51:18", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:51:43", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 09:51:55", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 09:52:10", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 09:53:33", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured in Gemini Response 15 validation errors for _GenerateContentParameters\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.list[union[File,Part,is-instance[Image],str]]\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/list_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.str\n  Input should be a valid string [type=string_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type", "pathname": "D:\\1_Playground\\uv_example\\app\\providers\\llm\\gemini.py", "funcName": "generate_response", "lineno": 23}
{"timestamp": "2025-07-03 09:53:36", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured While Processing pdf", "pathname": "D:\\1_Playground\\uv_example\\app\\api\\v1\\routers\\file_upload.py", "funcName": "upload_file", "lineno": 53}
{"timestamp": "2025-07-03 09:53:41", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  91.332757", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:53:41", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:53:45", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 09:55:47", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured in Gemini Response 15 validation errors for _GenerateContentParameters\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.list[union[File,Part,is-instance[Image],str]]\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/list_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.str\n  Input should be a valid string [type=string_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type", "pathname": "D:\\1_Playground\\uv_example\\app\\providers\\llm\\gemini.py", "funcName": "generate_response", "lineno": 23}
{"timestamp": "2025-07-03 09:55:47", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured While Processing pdf", "pathname": "D:\\1_Playground\\uv_example\\app\\api\\v1\\routers\\file_upload.py", "funcName": "upload_file", "lineno": 53}
{"timestamp": "2025-07-03 09:55:48", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  122.908726", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:55:48", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:55:56", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 09:57:00", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured in Gemini Response 15 validation errors for _GenerateContentParameters\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.list[union[File,Part,is-instance[Image],str]]\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/list_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.str\n  Input should be a valid string [type=string_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type", "pathname": "D:\\1_Playground\\uv_example\\app\\providers\\llm\\gemini.py", "funcName": "generate_response", "lineno": 23}
{"timestamp": "2025-07-03 09:57:00", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured While Processing pdf", "pathname": "D:\\1_Playground\\uv_example\\app\\api\\v1\\routers\\file_upload.py", "funcName": "upload_file", "lineno": 53}
{"timestamp": "2025-07-03 09:57:00", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  64.283127", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:57:00", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:57:03", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 09:57:25", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured in Gemini Response 15 validation errors for _GenerateContentParameters\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.list[union[File,Part,is-instance[Image],str]]\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/list_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[Content,list[union[File,Part,is-instance[Image],str]],File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.Content\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.list[union[File,Part,is-instance[Image],str]].1.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.list[union[File,Part,is-instance[Image],str]].1.str\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\ncontents.File\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.Part\n  Input should be a valid dictionary or object to extract fields from [type=model_attributes_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_attributes_type\ncontents.is-instance[Image]\n  Input should be an instance of Image [type=is_instance_of, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/is_instance_of\ncontents.str\n  Input should be a valid string [type=string_type, input_value=[Part(\n  inline_data=Blob...cation/pdf'\n  )\n), None], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type", "pathname": "D:\\1_Playground\\uv_example\\app\\providers\\llm\\gemini.py", "funcName": "generate_response", "lineno": 23}
{"timestamp": "2025-07-03 09:57:25", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured While Processing pdf", "pathname": "D:\\1_Playground\\uv_example\\app\\api\\v1\\routers\\file_upload.py", "funcName": "upload_file", "lineno": 53}
{"timestamp": "2025-07-03 09:57:26", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  22.278509", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 09:57:26", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 09:57:38", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 09:57:54", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 09:58:22", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 10:08:12", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  590.415781", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 10:08:12", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 10:08:12", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:08:25", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:37:19", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:37:31", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:37:49", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:38:06", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:38:30", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:38:46", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:40:10", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:40:28", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:40:46", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:41:24", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:41:45", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:42:03", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:43:04", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:43:50", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:44:14", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:44:49", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:45:07", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:45:51", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:46:09", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:46:26", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:46:38", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:56:52", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 10:57:48", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:58:06", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 10:58:51", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 11:03:21", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 11:03:39", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 11:03:57", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 11:04:09", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 11:04:21", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 11:06:03", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 11:06:32", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 11:08:12", "logger": "uv_example", "level": "ERROR", "message": "Exception Occured", "pathname": "D:\\1_Playground\\uv_example\\app\\services\\process_documents.py", "funcName": "extract_details", "lineno": 39}
{"timestamp": "2025-07-03 11:08:12", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  100.240657", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 11:08:12", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 11:08:12", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
{"timestamp": "2025-07-03 11:08:25", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 11:08:37", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 11:09:32", "logger": "uv_example", "level": "INFO", "message": "Mongodb Connection Sucessfull", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "initialise_mongo", "lineno": 24}
{"timestamp": "2025-07-03 11:09:43", "logger": "uv_example", "level": "INFO", "message": "Skipping body logging for file upload", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 40}
{"timestamp": "2025-07-03 11:19:58", "logger": "uv_example", "level": "INFO", "message": "POST http://localhost:8000/upload_file processed in  615.109843", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 54}
{"timestamp": "2025-07-03 11:19:58", "logger": "uv_example", "level": "INFO", "message": "Request parameters are: <File upload - not read>", "pathname": "D:\\1_Playground\\uv_example\\app\\main.py", "funcName": "processing_time", "lineno": 55}
{"timestamp": "2025-07-03 16:09:15", "logger": "uv_example", "level": "INFO", "message": "Mongo Connnection Close Sucessfully", "pathname": "D:\\1_Playground\\uv_example\\app\\db\\mongodb.py", "funcName": "close_mongo_connection", "lineno": 40}
